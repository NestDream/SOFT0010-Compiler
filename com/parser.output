Terminals unused in grammar

   '+'
   '-'
   '*'
   '/'
   DOT
   COMMENT
   COMMENTS
   AUTO
   CATCH
   CLASS
   CONST
   CO_AWAIT
   DELETE
   ENUM
   EXTERN
   FALSE
   FRIEND
   GOTO
   IMPORT
   INLINE
   NAMESPACE
   NULLPTR
   OPERATOR
   PRIVATE
   PROTECTED
   PUBLIC
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   SYNCHRONIZED
   TEMPLATE
   THIS
   THROW
   TRUE
   TRY
   TYPEDEF
   UNION
   UNSIGNED
   USING
   VIRTUAL
   TYPE
   ERROR_ID
   LETTERS
   QUETO
   DOUBLEQUETO
   SHARP


State 89 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 119 conflicts: 2 shift/reduce
State 138 conflicts: 1 reduce/reduce
State 153 conflicts: 21 shift/reduce
State 172 conflicts: 2 shift/reduce
State 173 conflicts: 2 shift/reduce
State 212 conflicts: 22 shift/reduce
State 224 conflicts: 1 shift/reduce
State 233 conflicts: 22 shift/reduce
State 238 conflicts: 22 shift/reduce
State 243 conflicts: 1 shift/reduce
State 259 conflicts: 21 shift/reduce
State 264 conflicts: 22 shift/reduce
State 265 conflicts: 22 shift/reduce
State 266 conflicts: 22 shift/reduce
State 268 conflicts: 22 shift/reduce


Grammar

    0 $accept: tree $end

    1 tree: program

    2 program: external_declaration
    3        | program external_declaration

    4 external_declaration: var_declaration
    5                     | fun_declaration

    6 var_declaration: declaration_specifiers init_declarator_list SEMI

    7 init_declarator_list: var
    8                     | assignment_expression
    9                     | init_array_or_point_assignment
   10                     | init_declarator_list COMMA assignment_expression
   11                     | init_declarator_list COMMA var
   12                     | init_declarator_list COMMA init_array_or_point_assignment

   13 init_array_or_point_assignment: array ASSIGNOP list_struct
   14                               | array ASSIGNOP LC RC
   15                               | pointer ASSIGNOP array
   16                               | array_sigle ASSIGNOP list_struct

   17 list_struct: LC content_of_list_struct RC

   18 content_of_list_struct: mininum
   19                       | list_struct
   20                       | content_of_list_struct COMMA mininum
   21                       | content_of_list_struct COMMA list_struct

   22 mininum: LETTER
   23        | STRING
   24        | number

   25 pointer: STAR id
   26        | STAR pointer

   27 paddress: ADDR id

   28 array: id array_main
   29      | NEW INT array_main
   30      | NEW CHAR array_main

   31 array_sigle: id array_special

   32 array_main: LB array_size RB array_main
   33           | LB RB array_main
   34           | LB array_size RB

   35 array_special: LB RB

   36 array_size: INT_DEX

   37 declarator: LP RP
   38           | LP params_list RP

   39 fun_declaration: declaration_specifiers id declarator compound_stmt

   40 declaration_specifiers: INT
   41                       | VOID
   42                       | FLOAT
   43                       | BOOL
   44                       | CHAR
   45                       | DOUBLE
   46                       | LONG
   47                       | SHORT
   48                       | STRING_DEFINE

   49 params_list: params
   50            | params COMMA params_list

   51 params: declaration_specifiers var

   52 var: id
   53    | array
   54    | pointer
   55    | paddress

   56 compound_stmt: LC RC
   57              | LC block_list RC

   58 block_list: block_item
   59           | block_list block_item

   60 block_item: var_declaration
   61           | statement_list

   62 statement_list: statement_list statement
   63               | statement

   64 statement: expression SEMI
   65          | compound_stmt
   66          | if_stmt
   67          | while_stmt
   68          | for_stmt
   69          | do_while_stmt
   70          | switch_stmt
   71          | BREAK SEMI
   72          | CONTINUE SEMI
   73          | return_stmt

   74 if_stmt: IF LP expression RP statement ELSE statement
   75        | IF LP expression RP LC statement_list RC ELSE statement_list
   76        | IF LP expression RP LC statement_list RC ELSE LC statement_list RC
   77        | IF LP expression RP statement
   78        | IF LP expression RP LC statement_list RC

   79 switch_stmt: SWITCH LP id RP LC case_list RC

   80 case_list: CASE INT_DEX CL LC statement_list RC case_list
   81          | CASE INT_DEX CL LC statement_list RC
   82          | CASE INT_DEX CL statement_list case_list
   83          | CASE INT_DEX CL statement_list
   84          | CASE LETTER CL LC statement_list RC case_list
   85          | CASE LETTER CL LC statement_list RC
   86          | CASE LETTER CL statement_list case_list
   87          | CASE LETTER CL statement_list
   88          | DEFAULT CL LC statement_list RC
   89          | DEFAULT CL statement_list

   90 while_stmt: WHILE LP expression RP statement
   91           | WHILE LP expression RP LC statement_list RC

   92 do_while_stmt: DO LC statement_list RC WHILE LP expression RP SEMI

   93 for_stmt: FOR for_condition for_body

   94 for_body: statement
   95         | LC statement_list RC

   96 for_condition: LP expression SEMI expression SEMI expression RP
   97              | LP var_declaration expression SEMI expression RP
   98              | LP SEMI expression SEMI expression RP
   99              | LP SEMI SEMI expression RP
  100              | LP SEMI SEMI RP

  101 return_stmt: RETURN SEMI
  102            | RETURN expression SEMI

  103 expression: assignment_expression
  104           | simple_expression
  105           | logical_expression

  106 logical_expression: expression AND expression
  107                   | expression OR expression
  108                   | NOT expression

  109 assignment_expression: id ASSIGNOP expression
  110                      | id self_assign expression
  111                      | array ASSIGNOP additive_expression
  112                      | unary_expression

  113 self_assign: PE
  114            | ME
  115            | SE
  116            | DE

  117 unary_expression: PP id
  118                 | MM id
  119                 | postfix_expression

  120 postfix_expression: id PP
  121                   | id MM

  122 simple_expression: additive_expression
  123                  | additive_expression relop additive_expression

  124 relop: LT
  125      | LE
  126      | GT
  127      | GE
  128      | EQ
  129      | NE

  130 additive_expression: term
  131                    | additive_expression PLUS term
  132                    | additive_expression MINUS term

  133 term: factor
  134     | term STAR factor
  135     | term DIV factor

  136 factor: LP expression RP
  137       | id
  138       | call_func
  139       | number
  140       | array
  141       | paddress
  142       | pointer

  143 call_func: id LP RP
  144          | id LP args RP

  145 args: expression
  146     | expression COMMA args

  147 number: INT_HEX
  148       | INT_OCT
  149       | INT_DEX
  150       | FLOAT

  151 id: ID


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
INT_DEX (258) 36 80 81 82 83 149
INT_HEX (259) 147
INT_OCT (260) 148
FLOAT (261) 42 150
SEMI (262) 6 64 71 72 92 96 97 98 99 100 101 102
COMMA (263) 10 11 12 20 21 50 146
GE (264) 127
LE (265) 125
EQ (266) 128
NE (267) 129
GT (268) 126
LT (269) 124
ASSIGNOP (270) 13 14 15 16 109 111
PLUS (271) 131
MINUS (272) 132
STAR (273) 25 26 134
ADDR (274) 27
DIV (275) 135
AND (276) 106
OR (277) 107
DOT (278)
NOT (279) 108
LP (280) 37 38 74 75 76 77 78 79 90 91 92 96 97 98 99 100 136 143 144
RP (281) 37 38 74 75 76 77 78 79 90 91 92 96 97 98 99 100 136 143 144
LB (282) 32 33 34 35
RB (283) 32 33 34 35
LC (284) 14 17 56 57 75 76 78 79 80 81 84 85 88 91 92 95
RC (285) 14 17 56 57 75 76 78 79 80 81 84 85 88 91 92 95
COMMENT (286)
COMMENTS (287)
AUTO (288)
BOOL (289) 43
BREAK (290) 71
CASE (291) 80 81 82 83 84 85 86 87
CATCH (292)
CHAR (293) 30 44
CLASS (294)
CONST (295)
CONTINUE (296) 72
CO_AWAIT (297)
DEFAULT (298) 88 89
DELETE (299)
DO (300) 92
DOUBLE (301) 45
ELSE (302) 74 75 76
ENUM (303)
EXTERN (304)
FALSE (305)
FOR (306) 93
FRIEND (307)
GOTO (308)
IF (309) 74 75 76 77 78
IMPORT (310)
INLINE (311)
INT (312) 29 40
LONG (313) 46
NAMESPACE (314)
NEW (315) 29 30
NULLPTR (316)
OPERATOR (317)
PRIVATE (318)
PROTECTED (319)
PUBLIC (320)
RETURN (321) 101 102
SHORT (322) 47
SIGNED (323)
SIZEOF (324)
STATIC (325)
STRING_DEFINE (326) 48
STRUCT (327)
SWITCH (328) 79
SYNCHRONIZED (329)
TEMPLATE (330)
THIS (331)
THROW (332)
TRUE (333)
TRY (334)
TYPEDEF (335)
UNION (336)
UNSIGNED (337)
USING (338)
VIRTUAL (339)
VOID (340) 41
WHILE (341) 90 91 92
TYPE (342)
ID (343) 151
ERROR_ID (344)
LETTER (345) 22 84 85 86 87
LETTERS (346)
QUETO (347)
STRING (348) 23
DOUBLEQUETO (349)
SHARP (350)
PE (351) 113
ME (352) 114
SE (353) 115
DE (354) 116
PP (355) 117 120
MM (356) 118 121
CL (357) 80 81 82 83 84 85 86 87 88 89


Nonterminals, with rules where they appear

$accept (107)
    on left: 0
tree (108)
    on left: 1, on right: 0
program (109)
    on left: 2 3, on right: 1 3
external_declaration (110)
    on left: 4 5, on right: 2 3
var_declaration (111)
    on left: 6, on right: 4 60 97
init_declarator_list (112)
    on left: 7 8 9 10 11 12, on right: 6 10 11 12
init_array_or_point_assignment (113)
    on left: 13 14 15 16, on right: 9 12
list_struct (114)
    on left: 17, on right: 13 16 19 21
content_of_list_struct (115)
    on left: 18 19 20 21, on right: 17 20 21
mininum (116)
    on left: 22 23 24, on right: 18 20
pointer (117)
    on left: 25 26, on right: 15 26 54 142
paddress (118)
    on left: 27, on right: 55 141
array (119)
    on left: 28 29 30, on right: 13 14 15 53 111 140
array_sigle (120)
    on left: 31, on right: 16
array_main (121)
    on left: 32 33 34, on right: 28 29 30 32 33
array_special (122)
    on left: 35, on right: 31
array_size (123)
    on left: 36, on right: 32 34
declarator (124)
    on left: 37 38, on right: 39
fun_declaration (125)
    on left: 39, on right: 5
declaration_specifiers (126)
    on left: 40 41 42 43 44 45 46 47 48, on right: 6 39 51
params_list (127)
    on left: 49 50, on right: 38 50
params (128)
    on left: 51, on right: 49 50
var (129)
    on left: 52 53 54 55, on right: 7 11 51
compound_stmt (130)
    on left: 56 57, on right: 39 65
block_list (131)
    on left: 58 59, on right: 57 59
block_item (132)
    on left: 60 61, on right: 58 59
statement_list (133)
    on left: 62 63, on right: 61 62 75 76 78 80 81 82 83 84 85 86 87
    88 89 91 92 95
statement (134)
    on left: 64 65 66 67 68 69 70 71 72 73, on right: 62 63 74 77 90
    94
if_stmt (135)
    on left: 74 75 76 77 78, on right: 66
switch_stmt (136)
    on left: 79, on right: 70
case_list (137)
    on left: 80 81 82 83 84 85 86 87 88 89, on right: 79 80 82 84 86
while_stmt (138)
    on left: 90 91, on right: 67
do_while_stmt (139)
    on left: 92, on right: 69
for_stmt (140)
    on left: 93, on right: 68
for_body (141)
    on left: 94 95, on right: 93
for_condition (142)
    on left: 96 97 98 99 100, on right: 93
return_stmt (143)
    on left: 101 102, on right: 73
expression (144)
    on left: 103 104 105, on right: 64 74 75 76 77 78 90 91 92 96 97
    98 99 102 106 107 108 109 110 136 145 146
logical_expression (145)
    on left: 106 107 108, on right: 105
assignment_expression (146)
    on left: 109 110 111 112, on right: 8 10 103
self_assign (147)
    on left: 113 114 115 116, on right: 110
unary_expression (148)
    on left: 117 118 119, on right: 112
postfix_expression (149)
    on left: 120 121, on right: 119
simple_expression (150)
    on left: 122 123, on right: 104
relop (151)
    on left: 124 125 126 127 128 129, on right: 123
additive_expression (152)
    on left: 130 131 132, on right: 111 122 123 131 132
term (153)
    on left: 133 134 135, on right: 130 131 132 134 135
factor (154)
    on left: 136 137 138 139 140 141 142, on right: 133 134 135
call_func (155)
    on left: 143 144, on right: 138
args (156)
    on left: 145 146, on right: 144 146
number (157)
    on left: 147 148 149 150, on right: 24 139
id (158)
    on left: 151, on right: 25 27 28 31 39 52 79 109 110 117 118 120
    121 137 143 144


State 0

    0 $accept: . tree $end

    FLOAT          shift, and go to state 1
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    DOUBLE         shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    VOID           shift, and go to state 9

    tree                    go to state 10
    program                 go to state 11
    external_declaration    go to state 12
    var_declaration         go to state 13
    fun_declaration         go to state 14
    declaration_specifiers  go to state 15


State 1

   42 declaration_specifiers: FLOAT .

    $default  reduce using rule 42 (declaration_specifiers)


State 2

   43 declaration_specifiers: BOOL .

    $default  reduce using rule 43 (declaration_specifiers)


State 3

   44 declaration_specifiers: CHAR .

    $default  reduce using rule 44 (declaration_specifiers)


State 4

   45 declaration_specifiers: DOUBLE .

    $default  reduce using rule 45 (declaration_specifiers)


State 5

   40 declaration_specifiers: INT .

    $default  reduce using rule 40 (declaration_specifiers)


State 6

   46 declaration_specifiers: LONG .

    $default  reduce using rule 46 (declaration_specifiers)


State 7

   47 declaration_specifiers: SHORT .

    $default  reduce using rule 47 (declaration_specifiers)


State 8

   48 declaration_specifiers: STRING_DEFINE .

    $default  reduce using rule 48 (declaration_specifiers)


State 9

   41 declaration_specifiers: VOID .

    $default  reduce using rule 41 (declaration_specifiers)


State 10

    0 $accept: tree . $end

    $end  shift, and go to state 16


State 11

    1 tree: program .
    3 program: program . external_declaration

    FLOAT          shift, and go to state 1
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    DOUBLE         shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    VOID           shift, and go to state 9

    $default  reduce using rule 1 (tree)

    external_declaration    go to state 17
    var_declaration         go to state 13
    fun_declaration         go to state 14
    declaration_specifiers  go to state 15


State 12

    2 program: external_declaration .

    $default  reduce using rule 2 (program)


State 13

    4 external_declaration: var_declaration .

    $default  reduce using rule 4 (external_declaration)


State 14

    5 external_declaration: fun_declaration .

    $default  reduce using rule 5 (external_declaration)


State 15

    6 var_declaration: declaration_specifiers . init_declarator_list SEMI
   39 fun_declaration: declaration_specifiers . id declarator compound_stmt

    STAR  shift, and go to state 18
    ADDR  shift, and go to state 19
    NEW   shift, and go to state 20
    ID    shift, and go to state 21
    PP    shift, and go to state 22
    MM    shift, and go to state 23

    init_declarator_list            go to state 24
    init_array_or_point_assignment  go to state 25
    pointer                         go to state 26
    paddress                        go to state 27
    array                           go to state 28
    array_sigle                     go to state 29
    var                             go to state 30
    assignment_expression           go to state 31
    unary_expression                go to state 32
    postfix_expression              go to state 33
    id                              go to state 34


State 16

    0 $accept: tree $end .

    $default  accept


State 17

    3 program: program external_declaration .

    $default  reduce using rule 3 (program)


State 18

   25 pointer: STAR . id
   26        | STAR . pointer

    STAR  shift, and go to state 18
    ID    shift, and go to state 21

    pointer  go to state 35
    id       go to state 36


State 19

   27 paddress: ADDR . id

    ID  shift, and go to state 21

    id  go to state 37


State 20

   29 array: NEW . INT array_main
   30      | NEW . CHAR array_main

    CHAR  shift, and go to state 38
    INT   shift, and go to state 39


State 21

  151 id: ID .

    $default  reduce using rule 151 (id)


State 22

  117 unary_expression: PP . id

    ID  shift, and go to state 21

    id  go to state 40


State 23

  118 unary_expression: MM . id

    ID  shift, and go to state 21

    id  go to state 41


State 24

    6 var_declaration: declaration_specifiers init_declarator_list . SEMI
   10 init_declarator_list: init_declarator_list . COMMA assignment_expression
   11                     | init_declarator_list . COMMA var
   12                     | init_declarator_list . COMMA init_array_or_point_assignment

    SEMI   shift, and go to state 42
    COMMA  shift, and go to state 43


State 25

    9 init_declarator_list: init_array_or_point_assignment .

    $default  reduce using rule 9 (init_declarator_list)


State 26

   15 init_array_or_point_assignment: pointer . ASSIGNOP array
   54 var: pointer .

    ASSIGNOP  shift, and go to state 44

    $default  reduce using rule 54 (var)


State 27

   55 var: paddress .

    $default  reduce using rule 55 (var)


State 28

   13 init_array_or_point_assignment: array . ASSIGNOP list_struct
   14                               | array . ASSIGNOP LC RC
   53 var: array .
  111 assignment_expression: array . ASSIGNOP additive_expression

    ASSIGNOP  shift, and go to state 45

    $default  reduce using rule 53 (var)


State 29

   16 init_array_or_point_assignment: array_sigle . ASSIGNOP list_struct

    ASSIGNOP  shift, and go to state 46


State 30

    7 init_declarator_list: var .

    $default  reduce using rule 7 (init_declarator_list)


State 31

    8 init_declarator_list: assignment_expression .

    $default  reduce using rule 8 (init_declarator_list)


State 32

  112 assignment_expression: unary_expression .

    $default  reduce using rule 112 (assignment_expression)


State 33

  119 unary_expression: postfix_expression .

    $default  reduce using rule 119 (unary_expression)


State 34

   28 array: id . array_main
   31 array_sigle: id . array_special
   39 fun_declaration: declaration_specifiers id . declarator compound_stmt
   52 var: id .
  109 assignment_expression: id . ASSIGNOP expression
  110                      | id . self_assign expression
  120 postfix_expression: id . PP
  121                   | id . MM

    ASSIGNOP  shift, and go to state 47
    LP        shift, and go to state 48
    LB        shift, and go to state 49
    PE        shift, and go to state 50
    ME        shift, and go to state 51
    SE        shift, and go to state 52
    DE        shift, and go to state 53
    PP        shift, and go to state 54
    MM        shift, and go to state 55

    $default  reduce using rule 52 (var)

    array_main     go to state 56
    array_special  go to state 57
    declarator     go to state 58
    self_assign    go to state 59


State 35

   26 pointer: STAR pointer .

    $default  reduce using rule 26 (pointer)


State 36

   25 pointer: STAR id .

    $default  reduce using rule 25 (pointer)


State 37

   27 paddress: ADDR id .

    $default  reduce using rule 27 (paddress)


State 38

   30 array: NEW CHAR . array_main

    LB  shift, and go to state 60

    array_main  go to state 61


State 39

   29 array: NEW INT . array_main

    LB  shift, and go to state 60

    array_main  go to state 62


State 40

  117 unary_expression: PP id .

    $default  reduce using rule 117 (unary_expression)


State 41

  118 unary_expression: MM id .

    $default  reduce using rule 118 (unary_expression)


State 42

    6 var_declaration: declaration_specifiers init_declarator_list SEMI .

    $default  reduce using rule 6 (var_declaration)


State 43

   10 init_declarator_list: init_declarator_list COMMA . assignment_expression
   11                     | init_declarator_list COMMA . var
   12                     | init_declarator_list COMMA . init_array_or_point_assignment

    STAR  shift, and go to state 18
    ADDR  shift, and go to state 19
    NEW   shift, and go to state 20
    ID    shift, and go to state 21
    PP    shift, and go to state 22
    MM    shift, and go to state 23

    init_array_or_point_assignment  go to state 63
    pointer                         go to state 26
    paddress                        go to state 27
    array                           go to state 28
    array_sigle                     go to state 29
    var                             go to state 64
    assignment_expression           go to state 65
    unary_expression                go to state 32
    postfix_expression              go to state 33
    id                              go to state 66


State 44

   15 init_array_or_point_assignment: pointer ASSIGNOP . array

    NEW  shift, and go to state 20
    ID   shift, and go to state 21

    array  go to state 67
    id     go to state 68


State 45

   13 init_array_or_point_assignment: array ASSIGNOP . list_struct
   14                               | array ASSIGNOP . LC RC
  111 assignment_expression: array ASSIGNOP . additive_expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    LP       shift, and go to state 73
    LC       shift, and go to state 74
    NEW      shift, and go to state 20
    ID       shift, and go to state 21

    list_struct          go to state 75
    pointer              go to state 76
    paddress             go to state 77
    array                go to state 78
    additive_expression  go to state 79
    term                 go to state 80
    factor               go to state 81
    call_func            go to state 82
    number               go to state 83
    id                   go to state 84


State 46

   16 init_array_or_point_assignment: array_sigle ASSIGNOP . list_struct

    LC  shift, and go to state 85

    list_struct  go to state 86


State 47

  109 assignment_expression: id ASSIGNOP . expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 89
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 48

   37 declarator: LP . RP
   38           | LP . params_list RP

    FLOAT          shift, and go to state 1
    RP             shift, and go to state 95
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    DOUBLE         shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    VOID           shift, and go to state 9

    declaration_specifiers  go to state 96
    params_list             go to state 97
    params                  go to state 98


State 49

   32 array_main: LB . array_size RB array_main
   33           | LB . RB array_main
   34           | LB . array_size RB
   35 array_special: LB . RB

    INT_DEX  shift, and go to state 99
    RB       shift, and go to state 100

    array_size  go to state 101


State 50

  113 self_assign: PE .

    $default  reduce using rule 113 (self_assign)


State 51

  114 self_assign: ME .

    $default  reduce using rule 114 (self_assign)


State 52

  115 self_assign: SE .

    $default  reduce using rule 115 (self_assign)


State 53

  116 self_assign: DE .

    $default  reduce using rule 116 (self_assign)


State 54

  120 postfix_expression: id PP .

    $default  reduce using rule 120 (postfix_expression)


State 55

  121 postfix_expression: id MM .

    $default  reduce using rule 121 (postfix_expression)


State 56

   28 array: id array_main .

    $default  reduce using rule 28 (array)


State 57

   31 array_sigle: id array_special .

    $default  reduce using rule 31 (array_sigle)


State 58

   39 fun_declaration: declaration_specifiers id declarator . compound_stmt

    LC  shift, and go to state 102

    compound_stmt  go to state 103


State 59

  110 assignment_expression: id self_assign . expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 104
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 60

   32 array_main: LB . array_size RB array_main
   33           | LB . RB array_main
   34           | LB . array_size RB

    INT_DEX  shift, and go to state 99
    RB       shift, and go to state 105

    array_size  go to state 101


State 61

   30 array: NEW CHAR array_main .

    $default  reduce using rule 30 (array)


State 62

   29 array: NEW INT array_main .

    $default  reduce using rule 29 (array)


State 63

   12 init_declarator_list: init_declarator_list COMMA init_array_or_point_assignment .

    $default  reduce using rule 12 (init_declarator_list)


State 64

   11 init_declarator_list: init_declarator_list COMMA var .

    $default  reduce using rule 11 (init_declarator_list)


State 65

   10 init_declarator_list: init_declarator_list COMMA assignment_expression .

    $default  reduce using rule 10 (init_declarator_list)


State 66

   28 array: id . array_main
   31 array_sigle: id . array_special
   52 var: id .
  109 assignment_expression: id . ASSIGNOP expression
  110                      | id . self_assign expression
  120 postfix_expression: id . PP
  121                   | id . MM

    ASSIGNOP  shift, and go to state 47
    LB        shift, and go to state 49
    PE        shift, and go to state 50
    ME        shift, and go to state 51
    SE        shift, and go to state 52
    DE        shift, and go to state 53
    PP        shift, and go to state 54
    MM        shift, and go to state 55

    $default  reduce using rule 52 (var)

    array_main     go to state 56
    array_special  go to state 57
    self_assign    go to state 59


State 67

   15 init_array_or_point_assignment: pointer ASSIGNOP array .

    $default  reduce using rule 15 (init_array_or_point_assignment)


State 68

   28 array: id . array_main

    LB  shift, and go to state 60

    array_main  go to state 56


State 69

  149 number: INT_DEX .

    $default  reduce using rule 149 (number)


State 70

  147 number: INT_HEX .

    $default  reduce using rule 147 (number)


State 71

  148 number: INT_OCT .

    $default  reduce using rule 148 (number)


State 72

  150 number: FLOAT .

    $default  reduce using rule 150 (number)


State 73

  136 factor: LP . expression RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 106
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 74

   14 init_array_or_point_assignment: array ASSIGNOP LC . RC
   17 list_struct: LC . content_of_list_struct RC

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    LC       shift, and go to state 85
    RC       shift, and go to state 107
    LETTER   shift, and go to state 108
    STRING   shift, and go to state 109

    list_struct             go to state 110
    content_of_list_struct  go to state 111
    mininum                 go to state 112
    number                  go to state 113


State 75

   13 init_array_or_point_assignment: array ASSIGNOP list_struct .

    $default  reduce using rule 13 (init_array_or_point_assignment)


State 76

  142 factor: pointer .

    $default  reduce using rule 142 (factor)


State 77

  141 factor: paddress .

    $default  reduce using rule 141 (factor)


State 78

  140 factor: array .

    $default  reduce using rule 140 (factor)


State 79

  111 assignment_expression: array ASSIGNOP additive_expression .
  131 additive_expression: additive_expression . PLUS term
  132                    | additive_expression . MINUS term

    PLUS   shift, and go to state 114
    MINUS  shift, and go to state 115

    $default  reduce using rule 111 (assignment_expression)


State 80

  130 additive_expression: term .
  134 term: term . STAR factor
  135     | term . DIV factor

    STAR  shift, and go to state 116
    DIV   shift, and go to state 117

    $default  reduce using rule 130 (additive_expression)


State 81

  133 term: factor .

    $default  reduce using rule 133 (term)


State 82

  138 factor: call_func .

    $default  reduce using rule 138 (factor)


State 83

  139 factor: number .

    $default  reduce using rule 139 (factor)


State 84

   28 array: id . array_main
  137 factor: id .
  143 call_func: id . LP RP
  144          | id . LP args RP

    LP  shift, and go to state 118
    LB  shift, and go to state 60

    $default  reduce using rule 137 (factor)

    array_main  go to state 56


State 85

   17 list_struct: LC . content_of_list_struct RC

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    LC       shift, and go to state 85
    LETTER   shift, and go to state 108
    STRING   shift, and go to state 109

    list_struct             go to state 110
    content_of_list_struct  go to state 111
    mininum                 go to state 112
    number                  go to state 113


State 86

   16 init_array_or_point_assignment: array_sigle ASSIGNOP list_struct .

    $default  reduce using rule 16 (init_array_or_point_assignment)


State 87

  108 logical_expression: NOT . expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 119
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 88

  111 assignment_expression: array . ASSIGNOP additive_expression
  140 factor: array .

    ASSIGNOP  shift, and go to state 120

    $default  reduce using rule 140 (factor)


State 89

  106 logical_expression: expression . AND expression
  107                   | expression . OR expression
  109 assignment_expression: id ASSIGNOP expression .

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    AND       [reduce using rule 109 (assignment_expression)]
    OR        [reduce using rule 109 (assignment_expression)]
    $default  reduce using rule 109 (assignment_expression)


State 90

  105 expression: logical_expression .

    $default  reduce using rule 105 (expression)


State 91

  103 expression: assignment_expression .

    $default  reduce using rule 103 (expression)


State 92

  104 expression: simple_expression .

    $default  reduce using rule 104 (expression)


State 93

  122 simple_expression: additive_expression .
  123                  | additive_expression . relop additive_expression
  131 additive_expression: additive_expression . PLUS term
  132                    | additive_expression . MINUS term

    GE     shift, and go to state 123
    LE     shift, and go to state 124
    EQ     shift, and go to state 125
    NE     shift, and go to state 126
    GT     shift, and go to state 127
    LT     shift, and go to state 128
    PLUS   shift, and go to state 114
    MINUS  shift, and go to state 115

    $default  reduce using rule 122 (simple_expression)

    relop  go to state 129


State 94

   28 array: id . array_main
  109 assignment_expression: id . ASSIGNOP expression
  110                      | id . self_assign expression
  120 postfix_expression: id . PP
  121                   | id . MM
  137 factor: id .
  143 call_func: id . LP RP
  144          | id . LP args RP

    ASSIGNOP  shift, and go to state 47
    LP        shift, and go to state 118
    LB        shift, and go to state 60
    PE        shift, and go to state 50
    ME        shift, and go to state 51
    SE        shift, and go to state 52
    DE        shift, and go to state 53
    PP        shift, and go to state 54
    MM        shift, and go to state 55

    $default  reduce using rule 137 (factor)

    array_main   go to state 56
    self_assign  go to state 59


State 95

   37 declarator: LP RP .

    $default  reduce using rule 37 (declarator)


State 96

   51 params: declaration_specifiers . var

    STAR  shift, and go to state 18
    ADDR  shift, and go to state 19
    NEW   shift, and go to state 20
    ID    shift, and go to state 21

    pointer   go to state 130
    paddress  go to state 27
    array     go to state 131
    var       go to state 132
    id        go to state 133


State 97

   38 declarator: LP params_list . RP

    RP  shift, and go to state 134


State 98

   49 params_list: params .
   50            | params . COMMA params_list

    COMMA  shift, and go to state 135

    $default  reduce using rule 49 (params_list)


State 99

   36 array_size: INT_DEX .

    $default  reduce using rule 36 (array_size)


State 100

   33 array_main: LB RB . array_main
   35 array_special: LB RB .

    LB  shift, and go to state 60

    $default  reduce using rule 35 (array_special)

    array_main  go to state 136


State 101

   32 array_main: LB array_size . RB array_main
   34           | LB array_size . RB

    RB  shift, and go to state 137


State 102

   56 compound_stmt: LC . RC
   57              | LC . block_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 153
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 103

   39 fun_declaration: declaration_specifiers id declarator compound_stmt .

    $default  reduce using rule 39 (fun_declaration)


State 104

  106 logical_expression: expression . AND expression
  107                   | expression . OR expression
  110 assignment_expression: id self_assign expression .

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    AND       [reduce using rule 110 (assignment_expression)]
    OR        [reduce using rule 110 (assignment_expression)]
    $default  reduce using rule 110 (assignment_expression)


State 105

   33 array_main: LB RB . array_main

    LB  shift, and go to state 60

    array_main  go to state 136


State 106

  106 logical_expression: expression . AND expression
  107                   | expression . OR expression
  136 factor: LP expression . RP

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 162


State 107

   14 init_array_or_point_assignment: array ASSIGNOP LC RC .

    $default  reduce using rule 14 (init_array_or_point_assignment)


State 108

   22 mininum: LETTER .

    $default  reduce using rule 22 (mininum)


State 109

   23 mininum: STRING .

    $default  reduce using rule 23 (mininum)


State 110

   19 content_of_list_struct: list_struct .

    $default  reduce using rule 19 (content_of_list_struct)


State 111

   17 list_struct: LC content_of_list_struct . RC
   20 content_of_list_struct: content_of_list_struct . COMMA mininum
   21                       | content_of_list_struct . COMMA list_struct

    COMMA  shift, and go to state 163
    RC     shift, and go to state 164


State 112

   18 content_of_list_struct: mininum .

    $default  reduce using rule 18 (content_of_list_struct)


State 113

   24 mininum: number .

    $default  reduce using rule 24 (mininum)


State 114

  131 additive_expression: additive_expression PLUS . term

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21

    pointer    go to state 76
    paddress   go to state 77
    array      go to state 78
    term       go to state 165
    factor     go to state 81
    call_func  go to state 82
    number     go to state 83
    id         go to state 84


State 115

  132 additive_expression: additive_expression MINUS . term

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21

    pointer    go to state 76
    paddress   go to state 77
    array      go to state 78
    term       go to state 166
    factor     go to state 81
    call_func  go to state 82
    number     go to state 83
    id         go to state 84


State 116

  134 term: term STAR . factor

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21

    pointer    go to state 76
    paddress   go to state 77
    array      go to state 78
    factor     go to state 167
    call_func  go to state 82
    number     go to state 83
    id         go to state 84


State 117

  135 term: term DIV . factor

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21

    pointer    go to state 76
    paddress   go to state 77
    array      go to state 78
    factor     go to state 168
    call_func  go to state 82
    number     go to state 83
    id         go to state 84


State 118

  143 call_func: id LP . RP
  144          | id LP . args RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    RP       shift, and go to state 169
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 170
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    args                   go to state 171
    number                 go to state 83
    id                     go to state 94


State 119

  106 logical_expression: expression . AND expression
  107                   | expression . OR expression
  108                   | NOT expression .

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    AND       [reduce using rule 108 (logical_expression)]
    OR        [reduce using rule 108 (logical_expression)]
    $default  reduce using rule 108 (logical_expression)


State 120

  111 assignment_expression: array ASSIGNOP . additive_expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21

    pointer              go to state 76
    paddress             go to state 77
    array                go to state 78
    additive_expression  go to state 79
    term                 go to state 80
    factor               go to state 81
    call_func            go to state 82
    number               go to state 83
    id                   go to state 84


State 121

  106 logical_expression: expression AND . expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 172
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 122

  107 logical_expression: expression OR . expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 173
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 123

  127 relop: GE .

    $default  reduce using rule 127 (relop)


State 124

  125 relop: LE .

    $default  reduce using rule 125 (relop)


State 125

  128 relop: EQ .

    $default  reduce using rule 128 (relop)


State 126

  129 relop: NE .

    $default  reduce using rule 129 (relop)


State 127

  126 relop: GT .

    $default  reduce using rule 126 (relop)


State 128

  124 relop: LT .

    $default  reduce using rule 124 (relop)


State 129

  123 simple_expression: additive_expression relop . additive_expression

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21

    pointer              go to state 76
    paddress             go to state 77
    array                go to state 78
    additive_expression  go to state 174
    term                 go to state 80
    factor               go to state 81
    call_func            go to state 82
    number               go to state 83
    id                   go to state 84


State 130

   54 var: pointer .

    $default  reduce using rule 54 (var)


State 131

   53 var: array .

    $default  reduce using rule 53 (var)


State 132

   51 params: declaration_specifiers var .

    $default  reduce using rule 51 (params)


State 133

   28 array: id . array_main
   52 var: id .

    LB  shift, and go to state 60

    $default  reduce using rule 52 (var)

    array_main  go to state 56


State 134

   38 declarator: LP params_list RP .

    $default  reduce using rule 38 (declarator)


State 135

   50 params_list: params COMMA . params_list

    FLOAT          shift, and go to state 1
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    DOUBLE         shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    VOID           shift, and go to state 9

    declaration_specifiers  go to state 96
    params_list             go to state 175
    params                  go to state 98


State 136

   33 array_main: LB RB array_main .

    $default  reduce using rule 33 (array_main)


State 137

   32 array_main: LB array_size RB . array_main
   34           | LB array_size RB .

    LB  shift, and go to state 60

    $default  reduce using rule 34 (array_main)

    array_main  go to state 176


State 138

   42 declaration_specifiers: FLOAT .
  150 number: FLOAT .

    STAR      reduce using rule 42 (declaration_specifiers)
    STAR      [reduce using rule 150 (number)]
    ADDR      reduce using rule 42 (declaration_specifiers)
    NEW       reduce using rule 42 (declaration_specifiers)
    ID        reduce using rule 42 (declaration_specifiers)
    PP        reduce using rule 42 (declaration_specifiers)
    MM        reduce using rule 42 (declaration_specifiers)
    $default  reduce using rule 150 (number)


State 139

   56 compound_stmt: LC RC .

    $default  reduce using rule 56 (compound_stmt)


State 140

   71 statement: BREAK . SEMI

    SEMI  shift, and go to state 177


State 141

   72 statement: CONTINUE . SEMI

    SEMI  shift, and go to state 178


State 142

   92 do_while_stmt: DO . LC statement_list RC WHILE LP expression RP SEMI

    LC  shift, and go to state 179


State 143

   93 for_stmt: FOR . for_condition for_body

    LP  shift, and go to state 180

    for_condition  go to state 181


State 144

   74 if_stmt: IF . LP expression RP statement ELSE statement
   75        | IF . LP expression RP LC statement_list RC ELSE statement_list
   76        | IF . LP expression RP LC statement_list RC ELSE LC statement_list RC
   77        | IF . LP expression RP statement
   78        | IF . LP expression RP LC statement_list RC

    LP  shift, and go to state 182


State 145

  101 return_stmt: RETURN . SEMI
  102            | RETURN . expression SEMI

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    SEMI     shift, and go to state 183
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 184
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 146

   79 switch_stmt: SWITCH . LP id RP LC case_list RC

    LP  shift, and go to state 185


State 147

   90 while_stmt: WHILE . LP expression RP statement
   91           | WHILE . LP expression RP LC statement_list RC

    LP  shift, and go to state 186


State 148

   60 block_item: var_declaration .

    $default  reduce using rule 60 (block_item)


State 149

    6 var_declaration: declaration_specifiers . init_declarator_list SEMI

    STAR  shift, and go to state 18
    ADDR  shift, and go to state 19
    NEW   shift, and go to state 20
    ID    shift, and go to state 21
    PP    shift, and go to state 22
    MM    shift, and go to state 23

    init_declarator_list            go to state 24
    init_array_or_point_assignment  go to state 25
    pointer                         go to state 26
    paddress                        go to state 27
    array                           go to state 28
    array_sigle                     go to state 29
    var                             go to state 30
    assignment_expression           go to state 31
    unary_expression                go to state 32
    postfix_expression              go to state 33
    id                              go to state 66


State 150

   65 statement: compound_stmt .

    $default  reduce using rule 65 (statement)


State 151

   57 compound_stmt: LC block_list . RC
   59 block_list: block_list . block_item

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 187
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_item              go to state 188
    statement_list          go to state 153
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 152

   58 block_list: block_item .

    $default  reduce using rule 58 (block_list)


State 153

   61 block_item: statement_list .
   62 statement_list: statement_list . statement

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 154

   63 statement_list: statement .

    $default  reduce using rule 63 (statement_list)


State 155

   66 statement: if_stmt .

    $default  reduce using rule 66 (statement)


State 156

   70 statement: switch_stmt .

    $default  reduce using rule 70 (statement)


State 157

   67 statement: while_stmt .

    $default  reduce using rule 67 (statement)


State 158

   69 statement: do_while_stmt .

    $default  reduce using rule 69 (statement)


State 159

   68 statement: for_stmt .

    $default  reduce using rule 68 (statement)


State 160

   73 statement: return_stmt .

    $default  reduce using rule 73 (statement)


State 161

   64 statement: expression . SEMI
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    SEMI  shift, and go to state 190
    AND   shift, and go to state 121
    OR    shift, and go to state 122


State 162

  136 factor: LP expression RP .

    $default  reduce using rule 136 (factor)


State 163

   20 content_of_list_struct: content_of_list_struct COMMA . mininum
   21                       | content_of_list_struct COMMA . list_struct

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    LC       shift, and go to state 85
    LETTER   shift, and go to state 108
    STRING   shift, and go to state 109

    list_struct  go to state 191
    mininum      go to state 192
    number       go to state 113


State 164

   17 list_struct: LC content_of_list_struct RC .

    $default  reduce using rule 17 (list_struct)


State 165

  131 additive_expression: additive_expression PLUS term .
  134 term: term . STAR factor
  135     | term . DIV factor

    STAR  shift, and go to state 116
    DIV   shift, and go to state 117

    $default  reduce using rule 131 (additive_expression)


State 166

  132 additive_expression: additive_expression MINUS term .
  134 term: term . STAR factor
  135     | term . DIV factor

    STAR  shift, and go to state 116
    DIV   shift, and go to state 117

    $default  reduce using rule 132 (additive_expression)


State 167

  134 term: term STAR factor .

    $default  reduce using rule 134 (term)


State 168

  135 term: term DIV factor .

    $default  reduce using rule 135 (term)


State 169

  143 call_func: id LP RP .

    $default  reduce using rule 143 (call_func)


State 170

  106 logical_expression: expression . AND expression
  107                   | expression . OR expression
  145 args: expression .
  146     | expression . COMMA args

    COMMA  shift, and go to state 193
    AND    shift, and go to state 121
    OR     shift, and go to state 122

    $default  reduce using rule 145 (args)


State 171

  144 call_func: id LP args . RP

    RP  shift, and go to state 194


State 172

  106 logical_expression: expression . AND expression
  106                   | expression AND expression .
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    AND       [reduce using rule 106 (logical_expression)]
    OR        [reduce using rule 106 (logical_expression)]
    $default  reduce using rule 106 (logical_expression)


State 173

  106 logical_expression: expression . AND expression
  107                   | expression . OR expression
  107                   | expression OR expression .

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    AND       [reduce using rule 107 (logical_expression)]
    OR        [reduce using rule 107 (logical_expression)]
    $default  reduce using rule 107 (logical_expression)


State 174

  123 simple_expression: additive_expression relop additive_expression .
  131 additive_expression: additive_expression . PLUS term
  132                    | additive_expression . MINUS term

    PLUS   shift, and go to state 114
    MINUS  shift, and go to state 115

    $default  reduce using rule 123 (simple_expression)


State 175

   50 params_list: params COMMA params_list .

    $default  reduce using rule 50 (params_list)


State 176

   32 array_main: LB array_size RB array_main .

    $default  reduce using rule 32 (array_main)


State 177

   71 statement: BREAK SEMI .

    $default  reduce using rule 71 (statement)


State 178

   72 statement: CONTINUE SEMI .

    $default  reduce using rule 72 (statement)


State 179

   92 do_while_stmt: DO LC . statement_list RC WHILE LP expression RP SEMI

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement_list         go to state 195
    statement              go to state 154
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 180

   96 for_condition: LP . expression SEMI expression SEMI expression RP
   97              | LP . var_declaration expression SEMI expression RP
   98              | LP . SEMI expression SEMI expression RP
   99              | LP . SEMI SEMI expression RP
  100              | LP . SEMI SEMI RP

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    SEMI           shift, and go to state 196
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    DOUBLE         shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    VOID           shift, and go to state 9
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 197
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    expression              go to state 198
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 181

   93 for_stmt: FOR for_condition . for_body

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 199
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 200
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    for_body               go to state 201
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 182

   74 if_stmt: IF LP . expression RP statement ELSE statement
   75        | IF LP . expression RP LC statement_list RC ELSE statement_list
   76        | IF LP . expression RP LC statement_list RC ELSE LC statement_list RC
   77        | IF LP . expression RP statement
   78        | IF LP . expression RP LC statement_list RC

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 202
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 183

  101 return_stmt: RETURN SEMI .

    $default  reduce using rule 101 (return_stmt)


State 184

  102 return_stmt: RETURN expression . SEMI
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    SEMI  shift, and go to state 203
    AND   shift, and go to state 121
    OR    shift, and go to state 122


State 185

   79 switch_stmt: SWITCH LP . id RP LC case_list RC

    ID  shift, and go to state 21

    id  go to state 204


State 186

   90 while_stmt: WHILE LP . expression RP statement
   91           | WHILE LP . expression RP LC statement_list RC

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 205
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 187

   57 compound_stmt: LC block_list RC .

    $default  reduce using rule 57 (compound_stmt)


State 188

   59 block_list: block_list block_item .

    $default  reduce using rule 59 (block_list)


State 189

   62 statement_list: statement_list statement .

    $default  reduce using rule 62 (statement_list)


State 190

   64 statement: expression SEMI .

    $default  reduce using rule 64 (statement)


State 191

   21 content_of_list_struct: content_of_list_struct COMMA list_struct .

    $default  reduce using rule 21 (content_of_list_struct)


State 192

   20 content_of_list_struct: content_of_list_struct COMMA mininum .

    $default  reduce using rule 20 (content_of_list_struct)


State 193

  146 args: expression COMMA . args

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 170
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    args                   go to state 206
    number                 go to state 83
    id                     go to state 94


State 194

  144 call_func: id LP args RP .

    $default  reduce using rule 144 (call_func)


State 195

   62 statement_list: statement_list . statement
   92 do_while_stmt: DO LC statement_list . RC WHILE LP expression RP SEMI

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 207
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 196

   98 for_condition: LP SEMI . expression SEMI expression RP
   99              | LP SEMI . SEMI expression RP
  100              | LP SEMI . SEMI RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    SEMI     shift, and go to state 208
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 209
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 197

   97 for_condition: LP var_declaration . expression SEMI expression RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 210
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 198

   96 for_condition: LP expression . SEMI expression SEMI expression RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    SEMI  shift, and go to state 211
    AND   shift, and go to state 121
    OR    shift, and go to state 122


State 199

   56 compound_stmt: LC . RC
   57              | LC . block_list RC
   95 for_body: LC . statement_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 212
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 200

   94 for_body: statement .

    $default  reduce using rule 94 (for_body)


State 201

   93 for_stmt: FOR for_condition for_body .

    $default  reduce using rule 93 (for_stmt)


State 202

   74 if_stmt: IF LP expression . RP statement ELSE statement
   75        | IF LP expression . RP LC statement_list RC ELSE statement_list
   76        | IF LP expression . RP LC statement_list RC ELSE LC statement_list RC
   77        | IF LP expression . RP statement
   78        | IF LP expression . RP LC statement_list RC
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 213


State 203

  102 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 102 (return_stmt)


State 204

   79 switch_stmt: SWITCH LP id . RP LC case_list RC

    RP  shift, and go to state 214


State 205

   90 while_stmt: WHILE LP expression . RP statement
   91           | WHILE LP expression . RP LC statement_list RC
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 215


State 206

  146 args: expression COMMA args .

    $default  reduce using rule 146 (args)


State 207

   92 do_while_stmt: DO LC statement_list RC . WHILE LP expression RP SEMI

    WHILE  shift, and go to state 216


State 208

   99 for_condition: LP SEMI SEMI . expression RP
  100              | LP SEMI SEMI . RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    RP       shift, and go to state 217
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 218
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 209

   98 for_condition: LP SEMI expression . SEMI expression RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    SEMI  shift, and go to state 219
    AND   shift, and go to state 121
    OR    shift, and go to state 122


State 210

   97 for_condition: LP var_declaration expression . SEMI expression RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    SEMI  shift, and go to state 220
    AND   shift, and go to state 121
    OR    shift, and go to state 122


State 211

   96 for_condition: LP expression SEMI . expression SEMI expression RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 221
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 212

   61 block_item: statement_list .
   62 statement_list: statement_list . statement
   95 for_body: LC statement_list . RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 222
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    RC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 213

   74 if_stmt: IF LP expression RP . statement ELSE statement
   75        | IF LP expression RP . LC statement_list RC ELSE statement_list
   76        | IF LP expression RP . LC statement_list RC ELSE LC statement_list RC
   77        | IF LP expression RP . statement
   78        | IF LP expression RP . LC statement_list RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 223
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 224
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 214

   79 switch_stmt: SWITCH LP id RP . LC case_list RC

    LC  shift, and go to state 225


State 215

   90 while_stmt: WHILE LP expression RP . statement
   91           | WHILE LP expression RP . LC statement_list RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 226
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 227
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 216

   92 do_while_stmt: DO LC statement_list RC WHILE . LP expression RP SEMI

    LP  shift, and go to state 228


State 217

  100 for_condition: LP SEMI SEMI RP .

    $default  reduce using rule 100 (for_condition)


State 218

   99 for_condition: LP SEMI SEMI expression . RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 229


State 219

   98 for_condition: LP SEMI expression SEMI . expression RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 230
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 220

   97 for_condition: LP var_declaration expression SEMI . expression RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 231
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 221

   96 for_condition: LP expression SEMI expression . SEMI expression RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    SEMI  shift, and go to state 232
    AND   shift, and go to state 121
    OR    shift, and go to state 122


State 222

   95 for_body: LC statement_list RC .

    $default  reduce using rule 95 (for_body)


State 223

   56 compound_stmt: LC . RC
   57              | LC . block_list RC
   75 if_stmt: IF LP expression RP LC . statement_list RC ELSE statement_list
   76        | IF LP expression RP LC . statement_list RC ELSE LC statement_list RC
   78        | IF LP expression RP LC . statement_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 233
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 224

   74 if_stmt: IF LP expression RP statement . ELSE statement
   77        | IF LP expression RP statement .

    ELSE  shift, and go to state 234

    ELSE      [reduce using rule 77 (if_stmt)]
    $default  reduce using rule 77 (if_stmt)


State 225

   79 switch_stmt: SWITCH LP id RP LC . case_list RC

    CASE     shift, and go to state 235
    DEFAULT  shift, and go to state 236

    case_list  go to state 237


State 226

   56 compound_stmt: LC . RC
   57              | LC . block_list RC
   91 while_stmt: WHILE LP expression RP LC . statement_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 238
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 227

   90 while_stmt: WHILE LP expression RP statement .

    $default  reduce using rule 90 (while_stmt)


State 228

   92 do_while_stmt: DO LC statement_list RC WHILE LP . expression RP SEMI

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 239
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 229

   99 for_condition: LP SEMI SEMI expression RP .

    $default  reduce using rule 99 (for_condition)


State 230

   98 for_condition: LP SEMI expression SEMI expression . RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 240


State 231

   97 for_condition: LP var_declaration expression SEMI expression . RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 241


State 232

   96 for_condition: LP expression SEMI expression SEMI . expression RP

    INT_DEX  shift, and go to state 69
    INT_HEX  shift, and go to state 70
    INT_OCT  shift, and go to state 71
    FLOAT    shift, and go to state 72
    STAR     shift, and go to state 18
    ADDR     shift, and go to state 19
    NOT      shift, and go to state 87
    LP       shift, and go to state 73
    NEW      shift, and go to state 20
    ID       shift, and go to state 21
    PP       shift, and go to state 22
    MM       shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    expression             go to state 242
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 233

   61 block_item: statement_list .
   62 statement_list: statement_list . statement
   75 if_stmt: IF LP expression RP LC statement_list . RC ELSE statement_list
   76        | IF LP expression RP LC statement_list . RC ELSE LC statement_list RC
   78        | IF LP expression RP LC statement_list . RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 243
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    RC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 234

   74 if_stmt: IF LP expression RP statement ELSE . statement

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 244
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 235

   80 case_list: CASE . INT_DEX CL LC statement_list RC case_list
   81          | CASE . INT_DEX CL LC statement_list RC
   82          | CASE . INT_DEX CL statement_list case_list
   83          | CASE . INT_DEX CL statement_list
   84          | CASE . LETTER CL LC statement_list RC case_list
   85          | CASE . LETTER CL LC statement_list RC
   86          | CASE . LETTER CL statement_list case_list
   87          | CASE . LETTER CL statement_list

    INT_DEX  shift, and go to state 245
    LETTER   shift, and go to state 246


State 236

   88 case_list: DEFAULT . CL LC statement_list RC
   89          | DEFAULT . CL statement_list

    CL  shift, and go to state 247


State 237

   79 switch_stmt: SWITCH LP id RP LC case_list . RC

    RC  shift, and go to state 248


State 238

   61 block_item: statement_list .
   62 statement_list: statement_list . statement
   91 while_stmt: WHILE LP expression RP LC statement_list . RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 249
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    RC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 239

   92 do_while_stmt: DO LC statement_list RC WHILE LP expression . RP SEMI
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 250


State 240

   98 for_condition: LP SEMI expression SEMI expression RP .

    $default  reduce using rule 98 (for_condition)


State 241

   97 for_condition: LP var_declaration expression SEMI expression RP .

    $default  reduce using rule 97 (for_condition)


State 242

   96 for_condition: LP expression SEMI expression SEMI expression . RP
  106 logical_expression: expression . AND expression
  107                   | expression . OR expression

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    RP   shift, and go to state 251


State 243

   75 if_stmt: IF LP expression RP LC statement_list RC . ELSE statement_list
   76        | IF LP expression RP LC statement_list RC . ELSE LC statement_list RC
   78        | IF LP expression RP LC statement_list RC .

    ELSE  shift, and go to state 252

    ELSE      [reduce using rule 78 (if_stmt)]
    $default  reduce using rule 78 (if_stmt)


State 244

   74 if_stmt: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 74 (if_stmt)


State 245

   80 case_list: CASE INT_DEX . CL LC statement_list RC case_list
   81          | CASE INT_DEX . CL LC statement_list RC
   82          | CASE INT_DEX . CL statement_list case_list
   83          | CASE INT_DEX . CL statement_list

    CL  shift, and go to state 253


State 246

   84 case_list: CASE LETTER . CL LC statement_list RC case_list
   85          | CASE LETTER . CL LC statement_list RC
   86          | CASE LETTER . CL statement_list case_list
   87          | CASE LETTER . CL statement_list

    CL  shift, and go to state 254


State 247

   88 case_list: DEFAULT CL . LC statement_list RC
   89          | DEFAULT CL . statement_list

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 255
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement_list         go to state 256
    statement              go to state 154
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 248

   79 switch_stmt: SWITCH LP id RP LC case_list RC .

    $default  reduce using rule 79 (switch_stmt)


State 249

   91 while_stmt: WHILE LP expression RP LC statement_list RC .

    $default  reduce using rule 91 (while_stmt)


State 250

   92 do_while_stmt: DO LC statement_list RC WHILE LP expression RP . SEMI

    SEMI  shift, and go to state 257


State 251

   96 for_condition: LP expression SEMI expression SEMI expression RP .

    $default  reduce using rule 96 (for_condition)


State 252

   75 if_stmt: IF LP expression RP LC statement_list RC ELSE . statement_list
   76        | IF LP expression RP LC statement_list RC ELSE . LC statement_list RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 258
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement_list         go to state 259
    statement              go to state 154
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 253

   80 case_list: CASE INT_DEX CL . LC statement_list RC case_list
   81          | CASE INT_DEX CL . LC statement_list RC
   82          | CASE INT_DEX CL . statement_list case_list
   83          | CASE INT_DEX CL . statement_list

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 260
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement_list         go to state 261
    statement              go to state 154
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 254

   84 case_list: CASE LETTER CL . LC statement_list RC case_list
   85          | CASE LETTER CL . LC statement_list RC
   86          | CASE LETTER CL . statement_list case_list
   87          | CASE LETTER CL . statement_list

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 262
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement_list         go to state 263
    statement              go to state 154
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 255

   56 compound_stmt: LC . RC
   57              | LC . block_list RC
   88 case_list: DEFAULT CL LC . statement_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 264
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 256

   62 statement_list: statement_list . statement
   89 case_list: DEFAULT CL statement_list .

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    $default  reduce using rule 89 (case_list)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 257

   92 do_while_stmt: DO LC statement_list RC WHILE LP expression RP SEMI .

    $default  reduce using rule 92 (do_while_stmt)


State 258

   56 compound_stmt: LC . RC
   57              | LC . block_list RC
   76 if_stmt: IF LP expression RP LC statement_list RC ELSE LC . statement_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 265
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 259

   62 statement_list: statement_list . statement
   75 if_stmt: IF LP expression RP LC statement_list RC ELSE statement_list .

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 75 (if_stmt)]
    INT_HEX   [reduce using rule 75 (if_stmt)]
    INT_OCT   [reduce using rule 75 (if_stmt)]
    FLOAT     [reduce using rule 75 (if_stmt)]
    STAR      [reduce using rule 75 (if_stmt)]
    ADDR      [reduce using rule 75 (if_stmt)]
    NOT       [reduce using rule 75 (if_stmt)]
    LP        [reduce using rule 75 (if_stmt)]
    LC        [reduce using rule 75 (if_stmt)]
    BREAK     [reduce using rule 75 (if_stmt)]
    CONTINUE  [reduce using rule 75 (if_stmt)]
    DO        [reduce using rule 75 (if_stmt)]
    FOR       [reduce using rule 75 (if_stmt)]
    IF        [reduce using rule 75 (if_stmt)]
    NEW       [reduce using rule 75 (if_stmt)]
    RETURN    [reduce using rule 75 (if_stmt)]
    SWITCH    [reduce using rule 75 (if_stmt)]
    WHILE     [reduce using rule 75 (if_stmt)]
    ID        [reduce using rule 75 (if_stmt)]
    PP        [reduce using rule 75 (if_stmt)]
    MM        [reduce using rule 75 (if_stmt)]
    $default  reduce using rule 75 (if_stmt)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 260

   56 compound_stmt: LC . RC
   57              | LC . block_list RC
   80 case_list: CASE INT_DEX CL LC . statement_list RC case_list
   81          | CASE INT_DEX CL LC . statement_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 266
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 261

   62 statement_list: statement_list . statement
   82 case_list: CASE INT_DEX CL statement_list . case_list
   83          | CASE INT_DEX CL statement_list .

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    BREAK     shift, and go to state 140
    CASE      shift, and go to state 235
    CONTINUE  shift, and go to state 141
    DEFAULT   shift, and go to state 236
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    $default  reduce using rule 83 (case_list)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    case_list              go to state 267
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 262

   56 compound_stmt: LC . RC
   57              | LC . block_list RC
   84 case_list: CASE LETTER CL LC . statement_list RC case_list
   85          | CASE LETTER CL LC . statement_list RC

    INT_DEX        shift, and go to state 69
    INT_HEX        shift, and go to state 70
    INT_OCT        shift, and go to state 71
    FLOAT          shift, and go to state 138
    STAR           shift, and go to state 18
    ADDR           shift, and go to state 19
    NOT            shift, and go to state 87
    LP             shift, and go to state 73
    LC             shift, and go to state 102
    RC             shift, and go to state 139
    BOOL           shift, and go to state 2
    BREAK          shift, and go to state 140
    CHAR           shift, and go to state 3
    CONTINUE       shift, and go to state 141
    DO             shift, and go to state 142
    DOUBLE         shift, and go to state 4
    FOR            shift, and go to state 143
    IF             shift, and go to state 144
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    NEW            shift, and go to state 20
    RETURN         shift, and go to state 145
    SHORT          shift, and go to state 7
    STRING_DEFINE  shift, and go to state 8
    SWITCH         shift, and go to state 146
    VOID           shift, and go to state 9
    WHILE          shift, and go to state 147
    ID             shift, and go to state 21
    PP             shift, and go to state 22
    MM             shift, and go to state 23

    var_declaration         go to state 148
    pointer                 go to state 76
    paddress                go to state 77
    array                   go to state 88
    declaration_specifiers  go to state 149
    compound_stmt           go to state 150
    block_list              go to state 151
    block_item              go to state 152
    statement_list          go to state 268
    statement               go to state 154
    if_stmt                 go to state 155
    switch_stmt             go to state 156
    while_stmt              go to state 157
    do_while_stmt           go to state 158
    for_stmt                go to state 159
    return_stmt             go to state 160
    expression              go to state 161
    logical_expression      go to state 90
    assignment_expression   go to state 91
    unary_expression        go to state 32
    postfix_expression      go to state 33
    simple_expression       go to state 92
    additive_expression     go to state 93
    term                    go to state 80
    factor                  go to state 81
    call_func               go to state 82
    number                  go to state 83
    id                      go to state 94


State 263

   62 statement_list: statement_list . statement
   86 case_list: CASE LETTER CL statement_list . case_list
   87          | CASE LETTER CL statement_list .

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    BREAK     shift, and go to state 140
    CASE      shift, and go to state 235
    CONTINUE  shift, and go to state 141
    DEFAULT   shift, and go to state 236
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    $default  reduce using rule 87 (case_list)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    case_list              go to state 269
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 264

   61 block_item: statement_list .
   62 statement_list: statement_list . statement
   88 case_list: DEFAULT CL LC statement_list . RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 270
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    RC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 265

   61 block_item: statement_list .
   62 statement_list: statement_list . statement
   76 if_stmt: IF LP expression RP LC statement_list RC ELSE LC statement_list . RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 271
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    RC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 266

   61 block_item: statement_list .
   62 statement_list: statement_list . statement
   80 case_list: CASE INT_DEX CL LC statement_list . RC case_list
   81          | CASE INT_DEX CL LC statement_list . RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 272
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    RC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 267

   82 case_list: CASE INT_DEX CL statement_list case_list .

    $default  reduce using rule 82 (case_list)


State 268

   61 block_item: statement_list .
   62 statement_list: statement_list . statement
   84 case_list: CASE LETTER CL LC statement_list . RC case_list
   85          | CASE LETTER CL LC statement_list . RC

    INT_DEX   shift, and go to state 69
    INT_HEX   shift, and go to state 70
    INT_OCT   shift, and go to state 71
    FLOAT     shift, and go to state 72
    STAR      shift, and go to state 18
    ADDR      shift, and go to state 19
    NOT       shift, and go to state 87
    LP        shift, and go to state 73
    LC        shift, and go to state 102
    RC        shift, and go to state 273
    BREAK     shift, and go to state 140
    CONTINUE  shift, and go to state 141
    DO        shift, and go to state 142
    FOR       shift, and go to state 143
    IF        shift, and go to state 144
    NEW       shift, and go to state 20
    RETURN    shift, and go to state 145
    SWITCH    shift, and go to state 146
    WHILE     shift, and go to state 147
    ID        shift, and go to state 21
    PP        shift, and go to state 22
    MM        shift, and go to state 23

    INT_DEX   [reduce using rule 61 (block_item)]
    INT_HEX   [reduce using rule 61 (block_item)]
    INT_OCT   [reduce using rule 61 (block_item)]
    FLOAT     [reduce using rule 61 (block_item)]
    STAR      [reduce using rule 61 (block_item)]
    ADDR      [reduce using rule 61 (block_item)]
    NOT       [reduce using rule 61 (block_item)]
    LP        [reduce using rule 61 (block_item)]
    LC        [reduce using rule 61 (block_item)]
    RC        [reduce using rule 61 (block_item)]
    BREAK     [reduce using rule 61 (block_item)]
    CONTINUE  [reduce using rule 61 (block_item)]
    DO        [reduce using rule 61 (block_item)]
    FOR       [reduce using rule 61 (block_item)]
    IF        [reduce using rule 61 (block_item)]
    NEW       [reduce using rule 61 (block_item)]
    RETURN    [reduce using rule 61 (block_item)]
    SWITCH    [reduce using rule 61 (block_item)]
    WHILE     [reduce using rule 61 (block_item)]
    ID        [reduce using rule 61 (block_item)]
    PP        [reduce using rule 61 (block_item)]
    MM        [reduce using rule 61 (block_item)]
    $default  reduce using rule 61 (block_item)

    pointer                go to state 76
    paddress               go to state 77
    array                  go to state 88
    compound_stmt          go to state 150
    statement              go to state 189
    if_stmt                go to state 155
    switch_stmt            go to state 156
    while_stmt             go to state 157
    do_while_stmt          go to state 158
    for_stmt               go to state 159
    return_stmt            go to state 160
    expression             go to state 161
    logical_expression     go to state 90
    assignment_expression  go to state 91
    unary_expression       go to state 32
    postfix_expression     go to state 33
    simple_expression      go to state 92
    additive_expression    go to state 93
    term                   go to state 80
    factor                 go to state 81
    call_func              go to state 82
    number                 go to state 83
    id                     go to state 94


State 269

   86 case_list: CASE LETTER CL statement_list case_list .

    $default  reduce using rule 86 (case_list)


State 270

   88 case_list: DEFAULT CL LC statement_list RC .

    $default  reduce using rule 88 (case_list)


State 271

   76 if_stmt: IF LP expression RP LC statement_list RC ELSE LC statement_list RC .

    $default  reduce using rule 76 (if_stmt)


State 272

   80 case_list: CASE INT_DEX CL LC statement_list RC . case_list
   81          | CASE INT_DEX CL LC statement_list RC .

    CASE     shift, and go to state 235
    DEFAULT  shift, and go to state 236

    $default  reduce using rule 81 (case_list)

    case_list  go to state 274


State 273

   84 case_list: CASE LETTER CL LC statement_list RC . case_list
   85          | CASE LETTER CL LC statement_list RC .

    CASE     shift, and go to state 235
    DEFAULT  shift, and go to state 236

    $default  reduce using rule 85 (case_list)

    case_list  go to state 275


State 274

   80 case_list: CASE INT_DEX CL LC statement_list RC case_list .

    $default  reduce using rule 80 (case_list)


State 275

   84 case_list: CASE LETTER CL LC statement_list RC case_list .

    $default  reduce using rule 84 (case_list)
